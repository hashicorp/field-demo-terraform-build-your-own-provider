#!/bin/bash -l

# Check the user signed up
if ! grep -q 'localhost:19090/signup' "$BASH_HISTORY_FILE"; then
    fail-message "You haven't run 'curl localhost:19090/signup' yet."
    exit 1
fi

# Check the user signed in
if ! grep -q 'localhost:19090/signin' "$BASH_HISTORY_FILE"; then
    fail-message "You haven't run 'curl localhost:19090/signin' yet."
    exit 1
fi

# Check the `HASHICUPS_TOKEN` env var was set
if [ "$HASHICUPS_TOKEN" = "" ]; then
    fail-message "You did not set the 'HASHICUPS_TOKEN' env var."
fi

# Check the `HASHICUPS_TOKEN` env var was added to the bashrc
if ! grep -q 'HASHICUPS_TOKEN' "$BASHRC_FILE"; then
    fail-message "You need to add the 'HASHICUPS_TOKEN' env var export to your '$BASHRC_FILE' file."
    exit 1
fi

# Check `hashicups/provider.go` has the `username` and `password` schemas
if ! grep -q 'username' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'username' schema in '$PROVIDER_FILE'."
    exit 1
fi

if ! grep -q 'password' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'password' schema in '$PROVIDER_FILE'."
    exit 1
fi

# Check `hashicups/provider.go` has the new imports
if ! grep -q 'github.com/hashicorp-demoapp/hashicups-client-go' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'github.com/hashicorp-demoapp/hashicups-client-go' import to '$PROVIDER_FILE'."
    exit 1
fi

if ! grep -q 'github.com/hashicorp/terraform-plugin-sdk/v2/diag' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'github.com/hashicorp/terraform-plugin-sdk/v2/diag' import to '$PROVIDER_FILE'."
    exit 1
fi

# Check the mod file to confirm that the new dependencies were installed
if ! grep -q 'github.com/hashicorp-demoapp/hashicups-client-go' "$MOD_FILE"; then
    fail-message "You haven't run 'go mod vendor' again to install the new dependencies."
    exit 1
fi

# Check `hashicups/provider.go` has the new `providerConfigure` function
if ! grep -q 'providerConfigure' "$PROVIDER_FILE"; then
    fail-message "You need to add the 'providerConfigure' function to '$PROVIDER_FILE'."
    exit 1
fi

# Check the `HASHICUPS_USERNAME` env var was set
if [ "$HASHICUPS_USERNAME" = "" ]; then
    fail-message "You did not set the 'HASHICUPS_USERNAME' env var."
    exit 1
fi

# Check the `HASHICUPS_PASSWORD` env var was set
if [ "$HASHICUPS_PASSWORD" = "" ]; then
    fail-message "You did not set the 'HASHICUPS_PASSWORD' env var."
    exit 1
fi

# Check the `HASHICUPS_USERNAME` env var was added to `~/.bashrc`
if ! grep -q 'HASHICUPS_USERNAME' "$BASHRC_FILE"; then
    fail-message "You need to add the 'HASHICUPS_USERNAME' env var export to your '$BASHRC_FILE' file."
    exit 1
fi

# Check the `HASHICUPS_PASSWORD` env var was added to `~/.bashrc`
if ! grep -q 'HASHICUPS_PASSWORD' "$BASHRC_FILE"; then
    fail-message "You need to add the 'HASHICUPS_PASSWORD' env var export to your '$BASHRC_FILE' file."
    exit 1
fi

# Check the apply output is successful when checked, which means auth worked
cd $PROJECT_HOME_DIR/examples
TF_APPLY_OUTPUT=$(terraform init && terraform apply --auto-approve | grep "Apply complete")

if ! [[ "$TF_APPLY_OUTPUT" == *"Apply complete"* ]]; then
    fail-message "The 'terraform apply' is not working successfully. Double check your credential env vars."
    exit 1
fi
